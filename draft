The Fast Sync protocol allows nodes to exchange committed blocks. It is used by nodes (re)joining the network to catch up with its peers, by downloading committed blocks from them, ideally in parallel. This is an alternative to learning the blocks decided in every instance of consensus, from the last height on which the node participated (if any) to the current one. Fast Sync is a peer-to-peer protocol that distinguishes the roles of client and server. Clients are nodes that recently joined the network, or recovered from a period of inactivity. Servers are nodes that have blocks requested by clients, i.e., blocks already learned, executed, and committed.

A client node in the Fast Sync protocol periodically broadcasts StatusRequest messages to all peers. A node, regardless of its role, responds with a StatusResponse message containing the range of contiguous available blocks. The upper limit of this range is the node’s current height, the last block it has committed and executed. Based on this information, a client node selects peers to which it sends BlockRequest messages, referring to a specific height. A node responds to it with the requested block, in a BlockResponse message, or with a NoBlockResponse message, when the requested block is not available. It is worth nothing that all these messages are sent in a best-effort manner, to avoid flooding the peer.

Blocks retrieved via Fast Sync are stored in a buffer, as they are not necessarily received in order. They are executed and committed in order, however, following the same procedure adopted for blocks decided by the consensus protocol. When a client catches up with their peers (i.e., it has received and applied all blocks its peers have already committed), the procedure is concluded and the node switches to the regular operation, using the consensus protocol.
 
Fast Sync is sensitive to attacks from malicious nodes, since it transfers a considerable amount of data between peers. At the same time, it is useful as long as several peers are willing to collaborate in the state transfer. The protocol tries to mitigate the damage from attacks by limiting the send rate on channels, and by assuming that correct nodes equally distribute requests among peers. However, besides disconnecting from peers that take too long to respond, no protection mechanism is devised.


Giao thức Fast Sync cho phép các nút trao đổi các khối đã cam kết. Nó được sử dụng bởi các nút (tái) tham gia mạng để bắt kịp với các đồng nghiệp của nó, bằng cách tải xuống các khối đã cam kết từ chúng, lý tưởng nhất là song song. Đây là một giải pháp thay thế cho việc học các khối được quyết định trong mọi trường hợp đồng thuận, từ độ cao cuối cùng mà nút tham gia (nếu có) cho đến độ cao hiện tại. Fast Sync là một giao thức ngang hàng phân biệt vai trò của máy khách và máy chủ. Khách hàng là các nút mới tham gia mạng hoặc được khôi phục sau một thời gian không hoạt động. Máy chủ là các nút có các khối được khách hàng yêu cầu, tức là các khối đã được học, thực thi và cam kết.
  
Một nút máy khách trong giao thức Đồng bộ hóa nhanh sẽ phát các thông báo StatusRequest theo định kỳ cho tất cả các nút ngang hàng. Một nút, bất kể vai trò của nó là gì, sẽ phản hồi bằng một thông báo StatusResponse chứa phạm vi các khối khả dụng liền kề. Giới hạn trên của phạm vi này là chiều cao hiện tại của nút, khối cuối cùng mà nó đã cam kết và thực thi. Dựa trên thông tin này, một nút máy khách chọn các nút ngang hàng mà nó sẽ gửi các thông báo BlockRequest, đề cập đến một độ cao cụ thể. Một nút phản hồi nó bằng khối được yêu cầu, trong thông báo BlockResponse hoặc bằng thông báo NoBlockResponse, khi khối được yêu cầu không có sẵn. Không có gì đáng để tất cả các tin nhắn này được gửi theo cách cố gắng nhất, để tránh làm ngập máy ngang hàng.
  
Các khối được truy xuất qua Đồng bộ hóa nhanh được lưu trữ trong bộ đệm vì chúng không nhất thiết phải được nhận theo thứ tự. Tuy nhiên, chúng được thực thi và cam kết theo thứ tự, tuân theo quy trình tương tự được áp dụng cho các khối được quyết định bởi giao thức đồng thuận. Khi một khách hàng bắt kịp với các đồng nghiệp của họ (nghĩa là nó đã nhận và áp dụng tất cả các khối mà các đồng nghiệp của nó đã cam kết), quy trình được kết thúc và nút chuyển sang hoạt động thông thường, sử dụng giao thức đồng thuận.
  
Fast Sync nhạy cảm với các cuộc tấn công từ các nút độc hại, vì nó truyền một lượng dữ liệu đáng kể giữa các nút ngang hàng. Đồng thời, nó hữu ích miễn là một số đồng nghiệp sẵn sàng cộng tác trong quá trình chuyển giao trạng thái. Giao thức cố gắng giảm thiểu thiệt hại từ các cuộc tấn công bằng cách giới hạn tốc độ gửi trên các kênh và bằng cách giả định rằng các nút chính xác sẽ phân phối đồng đều các yêu cầu giữa các nút ngang hàng. Tuy nhiên, bên cạnh việc ngắt kết nối với các đồng nghiệp mất quá nhiều thời gian để phản hồi, không có cơ chế bảo vệ nào được đưa ra.